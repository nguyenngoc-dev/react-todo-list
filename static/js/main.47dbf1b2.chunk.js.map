{"version":3,"sources":["Components/TaskForm.js","Components/Search.js","Components/Sort.js","Components/Control.js","Components/TaskItem.js","Components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","onChange","e","target","name","value","setState","onSubmit","preventDefault","state","onClear","status","closeForm","id","this","task","next","className","class","style","float","cursor","onClick","type","required","Component","Search","onSearch","keyword","placeholder","Sort","sortName","sortStatus","onSort","role","lineHeight","display","Control","marginBottom","TaskItem","onChangeStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","taskElement","tasks","map","App","setRandomId","Math","random","onToggleFrom","isDisplayForm","updating","onShowForm","data","list","push","forEach","localStorage","setItem","JSON","stringify","splice","toLowerCase","sort","by","getItem","parse","filter","item","indexOf","a","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47dbf1b2.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nclass TaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            name: '',\r\n            status: false\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        let target = e.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        if(name === 'status')\r\n        {\r\n            value = target.value === 'true' ? true : false\r\n        }\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n        \r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n    }\r\n    onClear = () => {\r\n        this.setState({\r\n            name: '',\r\n            status: false\r\n        })\r\n    }\r\n    closeForm = () => {\r\n        this.props.closeForm();\r\n    }\r\n    componentDidMount () {\r\n        \r\n        if(this.props.task)\r\n        {\r\n            this.setState({\r\n                id: this.props.task.id,\r\n                name: this.props.task.name,\r\n                status: this.props.task.status\r\n            })\r\n        }\r\n    }\r\n    componentWillReceiveProps (next) {\r\n        if(next && next.task) {\r\n            this.setState({\r\n                id: next.task.id,\r\n                name: next.task.name,\r\n                status: next.task.status\r\n            })\r\n        }\r\n        else if (!next.task)\r\n        {\r\n            this.setState({\r\n                id:'',\r\n                name: '',\r\n                status: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">\r\n                    {this.state.id !== '' ? 'Cập nhật' : 'Thêm'}\r\n                    <i class=\"fas fa-times\"\r\n                        style = {{float: \"right\", cursor: \"pointer\"}}\r\n                        onClick = {this.closeForm}></i>\r\n                    </h3>  \r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit = {this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Tên :</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                name = \"name\" \r\n                                value = {this.state.name}\r\n                                onChange = {this.onChange}\r\n                            />\r\n                        </div>\r\n                        <label>Trạng Thái :</label>\r\n                        <select className=\"form-control\"\r\n                                required=\"required\"\r\n                                name = \"status\"\r\n                                value = {this.state.status}\r\n                                onChange = {this.onChange}>\r\n                            <option value={true}>Kích Hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                        <br/>\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">Thêm</button>&nbsp;\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-danger\"\r\n                                onClick = {this.onClear}>Hủy Bỏ</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TaskForm;","import React,{ Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: ''\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        let target = e.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    onClick = () => {\r\n        this.props.onSearch(this.state.keyword)\r\n    }\r\n    render() {\r\n        return(\r\n          \r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"input-group\">\r\n                        <input  type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Nhập từ khóa...\" \r\n                                name = 'keyword'\r\n                                value = {this.state.keyword}\r\n                                onChange = {this.onChange}\r\n                                />\r\n                        <span className=\"input-group-btn\">\r\n                            <button className=\"btn btn-primary\" \r\n                                    type=\"button\"\r\n                                    onClick = {this.onClick}>\r\n                                <span className=\"fa fa-search mr-5\"></span>Tìm\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\nexport default Search;","import React, { Component } from \"react\";\r\n\r\nclass Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            status: 1\r\n        }\r\n    }\r\n    onClick = (sortName, sortStatus) => {\r\n        this.setState({\r\n            name: sortName,\r\n            status: sortStatus\r\n        })\r\n        this.props.onSort(sortName, sortStatus)\r\n    }\r\n    render() {\r\n        let {name, status} = this.state\r\n        return(\r\n          \r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick = {() => this.onClick('name', 1)}>\r\n                            <a role=\"button\">\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                    Tên A-Z\r\n                                </span>\r\n                                {(name === 'name' && status === 1) ? <i className=\"fas fa-check\" style = {{float:'right',lineHeight:1.6}}></i>: ''}\r\n                            </a>\r\n                        </li>\r\n                        <li onClick = {() => this.onClick('name', -1)}>\r\n                            <a role=\"button\">\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                    Tên Z-A\r\n                                </span>\r\n                                {(name === 'name' && status === -1) ? <i className=\"fas fa-check\" style = {{float:'right',lineHeight:1.6}}></i>: ''}\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\"></li>\r\n                        <li onClick = {() => this.onClick('status', 1)}>\r\n                        <a role=\"button\" style = {{display:'inline'}} >Trạng Thái Kích Hoạt</a>\r\n                        {(name === 'status' && status === 1) ? <i className=\"fas fa-check\" style = {{float:'right',lineHeight:1.6}}></i>: ''}\r\n                        </li>\r\n                        <li onClick = {() => this.onClick('status', -1)}>\r\n                        <a role=\"button\" style = {{display:'inline'}}> Trạng Thái Ẩn</a>\r\n                        {(name === 'status' && status === -1) ? <i className=\"fas fa-check\" style = {{float:'right',lineHeight:1.6}}></i>: ''}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div> \r\n               \r\n            \r\n        )\r\n    }\r\n}\r\nexport default Sort;","import Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\nimport React, {Component} from \"react\"\r\nclass Control extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"row mt-15\" style = {{marginBottom: 20}}>\r\n                <Search onSearch = {this.props.onSearch}\r\n                        \r\n                />\r\n                <Sort onSort = {this.props.onSort}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Control;","import React,{Component} from \"react\";\r\nclass TaskItem extends Component {\r\n    onChangeStatus = () => {\r\n        this.props.onChangeStatus(this.props.task.id)\r\n    }\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.task.id)\r\n    }\r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.task.id)\r\n    }\r\n    render() {\r\n        let {task,index} = this.props;\r\n        \r\n        return (\r\n            <tr>\r\n            <td>{index + 1}</td>\r\n            <td>{task.name}</td>\r\n            <td className=\"text-center\">\r\n                <span \r\n                    className = { task.status === true ? 'label label-success': 'label label-danger'}\r\n                    style = {{cursor:\"pointer\"}}\r\n                    onClick = {this.onChangeStatus}>\r\n                            { task.status === true ? 'Kích hoạt' : 'Ẩn'}\r\n                </span>\r\n            </td>\r\n            <td className=\"text-center\">\r\n                <button type=\"button\" \r\n                        className=\"btn btn-warning\"\r\n                        onClick = {this.onUpdate}>\r\n                    <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n                </button>\r\n                &nbsp;\r\n                <button type=\"button\" \r\n                    className=\"btn btn-danger\"\r\n                    onClick = {this.onDelete}>\r\n                    <span \r\n                        className=\"fa fa-trash mr-5\"\r\n                        \r\n                    ></span>Xóa\r\n                </button>\r\n            </td>\r\n        </tr>\r\n        )\r\n    }\r\n}\r\nexport default TaskItem;","import React,{Component} from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: '',\r\n            filterStatus: -1\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        let target = e.target;\r\n        let name = target.name;\r\n        let value = target.value;\r\n        \r\n        this.setState({\r\n            [name] : value\r\n        })\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus \r\n        )\r\n        \r\n    }\r\n    render() {\r\n        let {tasks} = this.props;\r\n        let taskElement = tasks.map((task,index) => {\r\n            return <TaskItem \r\n            key = {task.id}\r\n            task = {task}\r\n            index = {index}\r\n            onChangeStatus = {this.props.onChangeStatus}\r\n            onDelete = {this.props.onDelete}\r\n            onUpdate = {this.props.onUpdate}\r\n            />\r\n        }) \r\n        let {filterName, filterStatus} = this.state;\r\n        return (\r\n           \r\n            <table className=\"table table-bordered table-hover\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"text-center\">STT</th>\r\n                    <th className=\"text-center\">Tên</th>\r\n                    <th className=\"text-center\">Trạng Thái</th>\r\n                    <th className=\"text-center\">Hành Động</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>\r\n                        <input type=\"text\" \r\n                        className=\"form-control\"\r\n                        name = 'filterName'\r\n                        value = {filterName}\r\n                        onChange = {this.onChange} />\r\n                    </td>\r\n                    <td>\r\n                        <select \r\n                        className=\"form-control\"\r\n                        name = 'filterStatus'\r\n                        value = {filterStatus}\r\n                        onChange = {this.onChange}>\r\n                            <option value=\"-1\">Tất Cả</option>\r\n                            <option value=\"0\">Ẩn</option>\r\n                            <option value=\"1\">Kích Hoạt</option>\r\n                        </select>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n               {taskElement}\r\n            </tbody>\r\n        </table>\r\n        )\r\n    }\r\n}\r\nexport default TaskList;","  import React,{Component} from 'react'\n  import TaskForm from \"./Components/TaskForm\";\n  import Control from \"./Components/Control\";\n  import TaskList from \"./Components/TaskList\";\n  import {useState} from 'react'\n  import { render } from '@testing-library/react';\n  class App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        list : [],\n        isDisplayForm : false,\n        updating: null,\n        filterName: '',\n        filterStatus : - 1,\n        sort :{\n          by :'',\n          value: 1\n        }\n      }\n    }\n    \n  \n    setRandomId = () => {\n      return (Math.random() * Math.random()* Math.random())\n    }\n\n    componentDidMount() {\n      if(localStorage.getItem('list') && localStorage)\n      {\n      \n        var list = JSON.parse(localStorage.getItem('list'));\n        this.setState({\n          list: list\n        })\n      }\n    }\n    onToggleFrom = () => {\n      this.setState({\n        isDisplayForm: true,\n        updating: null\n      }, )\n     \n    }\n    onShowForm = () => {\n      this.setState({\n        isDisplayForm: true,\n        \n      })\n    }\n    closeForm = () => {\n      this.setState({\n        isDisplayForm: false,\n        updating: null\n      })\n    }\n    onSubmit = (data) => {\n      let {list} = this.state; \n      \n      if(data.id === '')\n      {\n        data.id = this.setRandomId();\n        list.push(data);\n      }\n      else{\n        list.forEach((task,index) => {\n          if(task.id === data.id)\n          {\n            \n            list[index] = data\n            \n            \n          }\n           \n        })\n      }\n    \n      this.setState({\n        list: list,\n        updating: null\n      })\n      localStorage.setItem('list', JSON.stringify(list))\n      \n    }\n    onChangeStatus = (id) => {\n      let {list} = this.state;\n      list.forEach((task,index) => {\n        if(task.id === id)\n        {\n          task.status = !task.status\n        }\n      })\n      this.setState({\n        list:list\n        \n      })\n      localStorage.setItem('list', JSON.stringify(list))\n    }\n    onDelete = (id) => {\n      let {list} = this.state;\n      list.forEach((task,index) => { \n        \n        if(task.id === id)\n        {\n        \n          list.splice(index,1)\n        }\n      })\n      this.setState({\n        list:list\n      })\n      localStorage.setItem('list', JSON.stringify(list))\n    }\n    onUpdate = (id) => {\n      let {list} = this.state;\n      list.forEach((task,index) => { \n        \n        if(task.id === id)\n        {\n          this.setState({\n            updating: task\n        })\n         \n        }\n      })\n      this.onShowForm();\n      \n    }\n    onFilter = (filterName,filterStatus) => {\n      filterStatus = +filterStatus;\n      this.setState({\n        filterName: filterName.toLowerCase(),\n        filterStatus: filterStatus\n      })\n    }\n    onSearch = (keyword) => {\n      this.setState({\n        keyword: keyword\n      })\n    }\n    onSort = (sortName, sortStatus) => {\n      this.setState({\n        sort: {\n          by: sortName,\n          value: sortStatus\n        }\n      })\n    }\n\n  render() {\n    let {filterName, filterStatus, list, keyword,sort} = this.state;\n    if(filterName) {\n      list = list.filter(item => {\n     \n        return item.name.toLowerCase().indexOf(filterName) !== -1;\n      })\n    }\n    list = list.filter(item => {\n      if(filterStatus === -1)\n      {\n        return item;\n      }\n      else{\n        return item.status === (filterStatus === 1 ? true : false)\n      }\n      \n    })\n    if(keyword)\n    {\n      list = list.filter(item => {\n     \n        return item.name.toLowerCase().indexOf(keyword) !== -1;\n      })\n    }\n    if(sort.by ==='name')\n    {\n      list.sort((a,b) => {\n        if(a.name > b.name) return sort.value\n        else if(a.name <b.name) return -sort.value\n        else return 0\n      })\n    }\n    else {\n      list.sort((a,b) => {\n        if(a.status > b.status) return -sort.value\n        else if(a.status <b.status) return sort.value\n        else return 0\n      })\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"text-center\">\n              <h1>Quản Lý Công Việc</h1>\n              <hr/>\n          </div>\n          <div className=\"row\">\n              <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n               {this.state.isDisplayForm ?  \n               <TaskForm \n                 onSubmit = {this.onSubmit}\n                 task = {this.state.updating}\n                 closeForm = {this.closeForm}\n               /> : ''}\n              </div>\n              <div className={this.state.isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\" }>\n                  <button type=\"button\" \n                  className=\"btn btn-primary\" \n                  style = {{marginBottom: 20}}\n                  onClick = {this.onToggleFrom}>\n                      <span className=\"fa fa-plus mr-5\" ></span>Thêm Công Việc\n                  </button>\n                  \n                <Control \n                  onSearch = {this.onSearch}\n                  onSort = {this.onSort}\n                />\n                  <div className=\"row mt-15\">\n                      <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                        <TaskList \n                          tasks = {list}\n                          onChangeStatus = {this.onChangeStatus}\n                          onDelete = {this.onDelete}\n                          onUpdate = {this.onUpdate}\n                          onFilter = {this.onFilter}\n                          />\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}